nth
paste(month.abb, nth, sep = ": ", collapse = "; ")
msg <- "==================================================\n"
msg2 <- paste(msg, "Var:")
strsplit(msg2, "\n")[[1]]
strsplit(msg2)
strsplit(msg2, "\n")
runApp('C:/Users/USUARIO/phvarianza')
strsplit(msg2, "\n")
paste("Varianza muestral = ", varianza_muestral,"\n",
"Estadistico de prueba = ", ep,
"Nivel de significancia = ", nivel_significancia,
"Prueba de hipotesis de dos colas",quote=FALSE,
"Region critica de rechazo de hipotesis nula",
"Lado izquierdo = ", lado_izq,
"Lado derecho = ", lado_der,
"QUEDO PENDIENTE DE COLOCAR UN PARRAFO QUE PERMITA CONCLUIR AUTOMATICAMENTE, ES DECIR SI SE RECHAZA LA HIPOTESIS NULA O NO",
sep = "\n")
runApp('D:/Santiago/2017/Cua/Investigacion/Proyectos Aplicativos Web Shiny Estadistica/Ej Ecuaciones bonitas en shiny')
runApp('C:/Users/USUARIO/phvarianza')
paste("Varianza muestral = ","\n",
"Estadistico de prueba = ",
"Nivel de significancia = ",
"Prueba de hipotesis de dos colas",
"Region critica de rechazo de hipotesis nula",
"Lado izquierdo = ",
"Lado derecho = ",
"QUEDO PENDIENTE DE COLOCAR UN PARRAFO QUE PERMITA CONCLUIR AUTOMATICAMENTE, ES DECIR SI SE RECHAZA LA HIPOTESIS NULA O NO",
sep = "\n")
paste("Varianza muestral = ","\n",
"Estadistico de prueba = ",
"Nivel de significancia = ",
"Prueba de hipotesis de dos colas",
"Region critica de rechazo de hipotesis nula",
"Lado izquierdo = ",
"Lado derecho = ",
"QUEDO PENDIENTE DE COLOCAR UN PARRAFO QUE PERMITA CONCLUIR AUTOMATICAMENTE, ES DECIR SI SE RECHAZA LA HIPOTESIS NULA O NO")
a <- paste("Varianza muestral = ","\n",
"Estadistico de prueba = ",
"Nivel de significancia = ",
"Prueba de hipotesis de dos colas",
"Region critica de rechazo de hipotesis nula",
"Lado izquierdo = ",
"Lado derecho = ",
"QUEDO PENDIENTE DE COLOCAR UN PARRAFO QUE PERMITA CONCLUIR AUTOMATICAMENTE, ES DECIR SI SE RECHAZA LA HIPOTESIS NULA O NO")
strsplit()
strsplit(a,"\n")[[1]]
runApp('C:/Users/USUARIO/phvarianza')
runApp('C:/Users/USUARIO/phvarianza')
paste("Varianza muestral = ","\n",
"Estadistico de prueba = ",
"Nivel de significancia = ",
"Prueba de hipotesis de dos colas",
"Region critica de rechazo de hipotesis nula",
"Lado izquierdo = ",
"Lado derecho = ",
"QUEDO PENDIENTE DE COLOCAR UN PARRAFO QUE PERMITA CONCLUIR AUTOMATICAMENTE, ES DECIR SI SE RECHAZA LA HIPOTESIS NULA O NO")
strsplit(a,"\n")[[1]]
runApp('C:/Users/USUARIO/phvarianza')
x= 0:20
y=dchisq(x,3)
ggplot(data.frame(x=x,y=y), aes(x=x,y=y))+ geom_line()
library(ggplot2)
ggplot(data.frame(x=x,y=y), aes(x=x,y=y))+ geom_line()
?sec
??sec
?seq
x= seq(0,20,0.1)
y=dchisq(x,3)
ggplot(data.frame(x=x,y=y), aes(x=x,y=y))+ geom_line()
x= seq(0,20,0.01)
y=dchisq(x,3)
ggplot(data.frame(x=x,y=y), aes(x=x,y=y))+ geom_line()
qchisq(0.025,3)
qchisq(0.025,3,lower.tail = F)
curve(dchisq(x,3))
x= seq(0,20,0.01)
y=dchisq(x,3)
ggplot(data.frame(x=x,y=y), aes(x=x,y=y))+ geom_line()
x= seq(0,19,0.01)
y=dchisq(x,3)
ggplot(data.frame(x=x,y=y), aes(x=x,y=y))+ geom_line()
qchisq(0.025,3,lower.tail = F)
x= seq(0,18,0.01)
y=dchisq(x,3)
ggplot(data.frame(x=x,y=y), aes(x=x,y=y))+ geom_line()
x= seq(0,17,0.01)
y=dchisq(x,3)
ggplot(data.frame(x=x,y=y), aes(x=x,y=y))+ geom_line()
dchisq(17,3)
x= seq(0,20,0.01)
y=dchisq(x,3)
y
x= seq(0,15,0.01)
y=dchisq(x,3)
ggplot(data.frame(x=x,y=y), aes(x=x,y=y))+ geom_line()
x= seq(0,13,0.01)
y=dchisq(x,3)
ggplot(data.frame(x=x,y=y), aes(x=x,y=y))+ geom_line()
qchisq(0.025,3,lower.tail = F)
x= seq(0,10,0.01)
y=dchisq(x,3)
ggplot(data.frame(x=x,y=y), aes(x=x,y=y))+ geom_line()
x= seq(0,12,0.01)
y=dchisq(x,3)
ggplot(data.frame(x=x,y=y), aes(x=x,y=y))+ geom_line()
shiny::runApp('C:/Users/USUARIO/phvarianza')
runApp('C:/Users/USUARIO/phvarianza')
list.files()
setwd("C:/Users/USUARIO/phvarianza")
runApp()
runApp()
bd <- read.table("geardata.txt", col.names = c("diametro", "bold number"))
head(bd)
prueba_hip_varianza(bd$diametro,0.01,0.05,"two.sided")
prueba_hip_varianza <- function(variable, varianza_h_n, nivel_significancia,
tipo_de_prueba){
grados_de_libertad <- length(variable) - 1
if(tipo_de_prueba == "two.sided"){
#Valor de la distribucion chi-cuadrado
#a partir del cual inicia la region de rechazo en el lado izquierdo
#de la distribución
lado_izq <- qchisq(nivel_significancia/2,grados_de_libertad)
#Valor de la distribucion chi-cuadrado
#a partir del cual inicia la region de rechazo en el lado derecho
#de la distribución
lado_der <- qchisq((1-nivel_significancia/2), grados_de_libertad)
varianza_muestral <- var(variable)
#Estadístico de prueba
ep <- grados_de_libertad*varianza_muestral/varianza_h_n
bd <- data.frame(Resultados=c("Varianza muestral",
"Estadistico de prueba",
"Nivel de significancia",
"Prueba de hipotesis de dos colas",
"Region critica de rechazo de hipotesis nula",
"    Lado izquierdo",
"    Lado derecho",
paste("Intervalo de confianza del", nivel_significancia*100,"%"),
"Conclusion")
,
Valores=c(as.character(varianza_muestral),
as.character(ep),
as.character(nivel_significancia),
"",
"",
as.character(lado_izq),
as.character(lado_der),
paste("(",
as.character(grados_de_libertad * varianza_muestral/lado_izq),
"-",
as.character(grados_de_libertad * varianza_muestral/lado_der),
")"),
decision(ep)
))
bd
}else{
if(tipo_de_prueba == "less"){
#Valor de la distribucion chi-cuadrado
#a partir del cual inicia la region de rechazo en el lado izquierdo
#de la distribución
lado_izq <- qchisq(nivel_significancia/2,grados_de_libertad)
#Valor de la distribucion chi-cuadrado
#a partir del cual inicia la region de rechazo en el lado derecho
#de la distribución
lado_der <- qchisq((1-nivel_significancia/2), grados_de_libertad)
varianza_muestral <- var(variable)
#Estadístico de prueba
ep <- grados_de_libertad*varianza_muestral/varianza_h_n
bd <- data.frame(Resultados=c("Varianza muestral",
"Estadistico de prueba",
"Nivel de significancia",
"Prueba de hipotesis de una sola cola (Menor)",
"Region critica de rechazo de hipotesis nula",
"    Lado izquierdo",
paste("Intervalo de confianza del", nivel_significancia*100,"%"),
"Conclusion")
,
Valores=c(as.character(varianza_muestral),
as.character(ep),
as.character(nivel_significancia),
"",
"",
as.character(lado_izq),
paste("(",
as.character(grados_de_libertad * varianza_muestral/lado_izq),
"-",
as.character(grados_de_libertad * varianza_muestral/lado_der),
")"),
decision(ep)
))
bd
}else{
if(tipo_de_prueba == "greater"){
#Valor de la distribucion chi-cuadrado
#a partir del cual inicia la region de rechazo en el lado izquierdo
#de la distribución
lado_izq <- qchisq(nivel_significancia/2,grados_de_libertad)
#Valor de la distribucion chi-cuadrado
#a partir del cual inicia la region de rechazo en el lado derecho
#de la distribución
lado_der <- qchisq((1-nivel_significancia/2), grados_de_libertad)
varianza_muestral <- var(variable)
#Estadístico de prueba
ep <- grados_de_libertad*varianza_muestral/varianza_h_n
bd <- data.frame(Resultados=c("Varianza muestral",
"Estadistico de prueba",
"Nivel de significancia",
"Prueba de hipotesis de una sola cola (Mayor)",
"Region critica de rechazo de hipotesis nula",
"    Lado derecho",
paste("Intervalo de confianza del", nivel_significancia*100,"%"),
"Conclusion")
,
Valores=c(as.character(varianza_muestral),
as.character(ep),
as.character(nivel_significancia),
"",
"",
as.character(lado_der),
paste("(",
as.character(grados_de_libertad * varianza_muestral/lado_izq),
"-",
as.character(grados_de_libertad * varianza_muestral/lado_der),
")"),
decision(ep)
))
bd
}else{
"Usted debe proporcionar el argumento tipo de prueba. Este asume tres valores:
Diferente (dos colas)
Menor (una cola)
Mayo (una cola)
Usted debe elegir uno."
}
}
}
}
decision <- function(estadistico_prueba){
if(estadistico_prueba <= lado_izq |
estadistico_prueba >= lado_der){
paste("El estadistico de prueba es igual a", estadistico_prueba,
"Como el estadistico de prueba se encuentra
dentro de la region critica de rechazo entonces se rechaza
la hipotesis nula en favor de la hipotesis alternativa.")
}else{
paste("El estadistico de prueba es igual a", estadistico_prueba,
"Como el estadistico es de prueba se encuentra fuera
de la region critica de rechazo entonces se concluye que
los datos no son suficientes para rechazar la hipotesis nula.")
}
}
prueba_hip_varianza(bd$diametro,0.01,0.05,"two.sided")
decision <- function(estadistico_prueba, lado_izq, lado_der){
if(estadistico_prueba <= lado_izq |
estadistico_prueba >= lado_der){
paste("El estadistico de prueba es igual a", estadistico_prueba,
"Como el estadistico de prueba se encuentra
dentro de la region critica de rechazo entonces se rechaza
la hipotesis nula en favor de la hipotesis alternativa.")
}else{
paste("El estadistico de prueba es igual a", estadistico_prueba,
"Como el estadistico es de prueba se encuentra fuera
de la region critica de rechazo entonces se concluye que
los datos no son suficientes para rechazar la hipotesis nula.")
}
}
decision <- function(estadistico_prueba, lado_izq, lado_der){
if(estadistico_prueba <= lado_izq |
estadistico_prueba >= lado_der){
paste("El estadistico de prueba es igual a", estadistico_prueba,
"Como el estadistico de prueba se encuentra
dentro de la region critica de rechazo entonces se rechaza
la hipotesis nula en favor de la hipotesis alternativa.")
}else{
paste("El estadistico de prueba es igual a", estadistico_prueba,
"Como el estadistico es de prueba se encuentra fuera
de la region critica de rechazo entonces se concluye que
los datos no son suficientes para rechazar la hipotesis nula.")
}
}
prueba_hip_varianza <- function(variable, varianza_h_n, nivel_significancia,
tipo_de_prueba){
grados_de_libertad <- length(variable) - 1
if(tipo_de_prueba == "two.sided"){
#Valor de la distribucion chi-cuadrado
#a partir del cual inicia la region de rechazo en el lado izquierdo
#de la distribución
lado_izq <- qchisq(nivel_significancia/2,grados_de_libertad)
#Valor de la distribucion chi-cuadrado
#a partir del cual inicia la region de rechazo en el lado derecho
#de la distribución
lado_der <- qchisq((1-nivel_significancia/2), grados_de_libertad)
varianza_muestral <- var(variable)
#Estadístico de prueba
ep <- grados_de_libertad*varianza_muestral/varianza_h_n
bd <- data.frame(Resultados=c("Varianza muestral",
"Estadistico de prueba",
"Nivel de significancia",
"Prueba de hipotesis de dos colas",
"Region critica de rechazo de hipotesis nula",
"    Lado izquierdo",
"    Lado derecho",
paste("Intervalo de confianza del", nivel_significancia*100,"%"),
"Conclusion")
,
Valores=c(as.character(varianza_muestral),
as.character(ep),
as.character(nivel_significancia),
"",
"",
as.character(lado_izq),
as.character(lado_der),
paste("(",
as.character(grados_de_libertad * varianza_muestral/lado_izq),
"-",
as.character(grados_de_libertad * varianza_muestral/lado_der),
")"),
decision(ep,lado_izq = lado_izq, lado_der = lado_der)
))
bd
}else{
if(tipo_de_prueba == "less"){
#Valor de la distribucion chi-cuadrado
#a partir del cual inicia la region de rechazo en el lado izquierdo
#de la distribución
lado_izq <- qchisq(nivel_significancia/2,grados_de_libertad)
#Valor de la distribucion chi-cuadrado
#a partir del cual inicia la region de rechazo en el lado derecho
#de la distribución
lado_der <- qchisq((1-nivel_significancia/2), grados_de_libertad)
varianza_muestral <- var(variable)
#Estadístico de prueba
ep <- grados_de_libertad*varianza_muestral/varianza_h_n
bd <- data.frame(Resultados=c("Varianza muestral",
"Estadistico de prueba",
"Nivel de significancia",
"Prueba de hipotesis de una sola cola (Menor)",
"Region critica de rechazo de hipotesis nula",
"    Lado izquierdo",
paste("Intervalo de confianza del", nivel_significancia*100,"%"),
"Conclusion")
,
Valores=c(as.character(varianza_muestral),
as.character(ep),
as.character(nivel_significancia),
"",
"",
as.character(lado_izq),
paste("(",
as.character(grados_de_libertad * varianza_muestral/lado_izq),
"-",
as.character(grados_de_libertad * varianza_muestral/lado_der),
")"),
decision(ep, lado_izq = lado_izq)
))
bd
}else{
if(tipo_de_prueba == "greater"){
#Valor de la distribucion chi-cuadrado
#a partir del cual inicia la region de rechazo en el lado izquierdo
#de la distribución
lado_izq <- qchisq(nivel_significancia/2,grados_de_libertad)
#Valor de la distribucion chi-cuadrado
#a partir del cual inicia la region de rechazo en el lado derecho
#de la distribución
lado_der <- qchisq((1-nivel_significancia/2), grados_de_libertad)
varianza_muestral <- var(variable)
#Estadístico de prueba
ep <- grados_de_libertad*varianza_muestral/varianza_h_n
bd <- data.frame(Resultados=c("Varianza muestral",
"Estadistico de prueba",
"Nivel de significancia",
"Prueba de hipotesis de una sola cola (Mayor)",
"Region critica de rechazo de hipotesis nula",
"    Lado derecho",
paste("Intervalo de confianza del", nivel_significancia*100,"%"),
"Conclusion")
,
Valores=c(as.character(varianza_muestral),
as.character(ep),
as.character(nivel_significancia),
"",
"",
as.character(lado_der),
paste("(",
as.character(grados_de_libertad * varianza_muestral/lado_izq),
"-",
as.character(grados_de_libertad * varianza_muestral/lado_der),
")"),
decision(ep, lado_der = lado_der)
))
bd
}else{
"Usted debe proporcionar el argumento tipo de prueba. Este asume tres valores:
Diferente (dos colas)
Menor (una cola)
Mayo (una cola)
Usted debe elegir uno."
}
}
}
}
prueba_hip_varianza(bd$diametro,0.01,0.05,"two.sided")
runApp()
x<-seq(0.0,0.1699,0.0001)
ytop<-dnorm(0.12,0.08,0.02)
MyDF<-data.frame(x=x,y=dnorm(x,0.08,0.02))
shade <- rbind(c(0.12,0), subset(MyDF, x > 0.12), c(MyDF[nrow(MyDF), "X"], 0))
p + geom_segment(aes(x=0.12,y=0,xend=0.12,yend=ytop)) +
geom_polygon(data = shade, aes(x, y))
p + geom_segment(aes(x=0,y=0.12,xend=0.12,yend=ytop)) +
geom_polygon(data = shade, aes(x, y))
shade
head(shade)
set.seed(1)
x <- c(rnorm(50, mean = 1), rnorm(50, mean = 3))
y <- c(rep("site1", 50), rep("site2", 50))
xy <- data.frame(x, y)
x <- c(rnorm(50, mean = 1), rnorm(50, mean = 3))
y <- c(rep("site1", 50), rep("site2", 50))
xy <- data.frame(x, y)
library(ggplot2)
ggplot(xy, aes(x, color = y)) + geom_density()
gg <- dt[,list(x=density(value)$x, y=density(value)$y),by="site"]
library(data.table)
set.seed(1)
value <- c(rnorm(50, mean = 1), rnorm(50, mean = 3))
site  <- c(rep("site1", 50), rep("site2", 50))
dt    <- data.table(site,value)
head(dt)
gg <- dt[,list(x=density(value)$x, y=density(value)$y),by="site"]
head(gg)
gg
View(gg)
x<-seq(0.0,0.1699,0.0001)
ytop<-dnorm(0.12,0.08,0.02)
MyDF<-data.frame(x=x,y=dnorm(x,0.08,0.02))
shade <- rbind(c(0.12,0), subset(MyDF, x > 0.12), c(MyDF[nrow(MyDF), "X"], 0))
p + geom_segment(aes(x=0.12,y=0,xend=0.12,yend=ytop)) +
geom_polygon(data = shade, aes(x, y))
p<-qplot(x=MyDF$x,y=MyDF$y,geom="line")
x<-seq(0.0,0.1699,0.0001)
ytop<-dnorm(0.12,0.08,0.02)
MyDF<-data.frame(x=x,y=dnorm(x,0.08,0.02))
p<-qplot(x=MyDF$x,y=MyDF$y,geom="line")
shade <- rbind(c(0.12,0), subset(MyDF, x > 0.12), c(MyDF[nrow(MyDF), "X"], 0))
p + geom_segment(aes(x=0.12,y=0,xend=0.12,yend=ytop)) +
geom_polygon(data = shade, aes(x, y))
p<-qplot(x=MyDF$x,y=MyDF$y,geom="line")
p
p <- ggplot(MyDF, aes(x=x,y=y)) + geom_line()
p
p<-qplot(x=MyDF$x,y=MyDF$y,geom="line")
p
p <- ggplot(MyDF, aes(x=x,y=y)) + geom_line()
p
shade <- rbind(c(0.12,0), subset(MyDF, x > 0.12), c(MyDF[nrow(MyDF), "X"], 0))
p + geom_segment(aes(x=0.12,y=0,xend=0.12,yend=ytop)) +
geom_polygon(data = shade, aes(x, y))
p <- ggplot(MyDF, aes(x=x,y=y)) + geom_line()
p
shade <- rbind(c(0.12,0), subset(MyDF, x > 0.12), c(MyDF[nrow(MyDF), "X"], 0))
p + geom_segment(aes(x=0.12,y=0,xend=0.12,yend=ytop)) +
geom_polygon(data = shade, aes(x, y))
shade
View(shade)
c(MyDF[nrow(MyDF), "X"], 0)
MyDF[nrow(MyDF), "X"]
head(shade)
tail(shade)
c(MyDF[nrow(MyDF), "X"], 0)
x= 0:20
y=dchisq(x,3)
ggplot(data.frame(x=x,y=y), aes(x=x,y=y))+ geom_line()
x= seq(0,20,0.01)
y=dchisq(x,3)
ggplot(data.frame(x=x,y=y), aes(x=x,y=y))+ geom_line()
qchisq(0.025,3,lower.tail = F)
MyDF <-data.frame(x=x,y=y)
shade <- rbind(c(qchisq(0.025,3,lower.tail = F),0),
subset(MyDF, x > qchisq(0.025,3,lower.tail = F)),
c(MyDF[nrow(MyDF), "X"], 0))
p + geom_segment(aes(x=qchisq(0.025,3,lower.tail = F),y=0,
xend=qchisq(0.025,3,lower.tail = F),yend=ytop)) +
geom_polygon(data = shade, aes(x, y))
shade <- rbind(c(qchisq(0.025,3,lower.tail = F),0),
subset(MyDF, x > qchisq(0.025,3,lower.tail = F)),
c(MyDF[nrow(MyDF), "x"], 0))
shade
MyDF[nrow(MyDF), "x"]
p + geom_segment(aes(x=qchisq(0.025,3,lower.tail = F),y=0,
xend=qchisq(0.025,3,lower.tail = F),yend=ytop)) +
geom_polygon(data = shade, aes(x, y))
shade <- rbind(c(qchisq(0.025,3,lower.tail = F),0),
subset(MyDF, x > qchisq(0.025,3,lower.tail = F)),
c(0, 0))
p + geom_segment(aes(x=qchisq(0.025,3,lower.tail = F),y=0,
xend=qchisq(0.025,3,lower.tail = F),yend=ytop)) +
geom_polygon(data = shade, aes(x, y))
x<-seq(0.0,0.1699,0.0001)
ytop<-dnorm(0.12,0.08,0.02)
MyDF<-data.frame(x=x,y=dnorm(x,0.08,0.02))
p<-qplot(x=MyDF$x,y=MyDF$y,geom="line")
p <- ggplot(MyDF, aes(x=x,y=y)) + geom_line()
p
#First subst the data and add the coordinates to make it shade to y = 0
shade <- rbind(c(0.12,0), subset(MyDF, x > 0.12), c(MyDF[nrow(MyDF), "x"], 0))
#Then use this new data.frame with geom_polygon
p + geom_segment(aes(x=0.12,y=0,xend=0.12,yend=ytop)) +
geom_polygon(data = shade, aes(x, y))
runApp()
q()
